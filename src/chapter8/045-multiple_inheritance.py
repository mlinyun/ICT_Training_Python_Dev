# 多重继承
class A:
    a = 1
    b = 1


class B:
    a = 2
    b = 2


class C(A):
    a = 3
    c = 4


class D(B, C):
    d = 4


class E(B, C):
    pass


# 我们创建了 A、B、C、D、E 五个类，其中 C 继承了 A
# D 继承了 B 和 C；E 继承了 C 和 B
# 猜一下 D().a 会是多少
print(D().a)  # 2
# 首先从 D(B,C) 知道 D 继承了 B 和 C，然后发现 D 中没有 a 属性
# 接着在 B 中寻找，果然查到 a = 2

# 接下来，我们再猜一下 E().c 会是多少
print(E().c)  # 4

# 上面的例子只是最简单的应用，真实场景中多重继承可能非常复杂
# 此时，我们要想寻找真正调用的哪个类的属性或对象就非常困难
# 类的 mro() 方法可以打印出类的解析顺序，方便我们理解
print(E.mro())
# 我们只需要从打印出的列表中依次去寻找我们想要属性或对象即可
